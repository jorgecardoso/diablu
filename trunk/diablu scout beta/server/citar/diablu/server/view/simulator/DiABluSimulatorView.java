/*
 * DiABluSimulatorView.java
 *
 * Created on 11 août 2006, 15:47
 */

package citar.diablu.server.view.simulator;

// j2se
import java.util.Vector;

// log
import java.util.logging.Logger;

// i18n & l9n
import java.util.ResourceBundle;

// model data 
import citar.diablu.server.model.data.DiABluID;
import citar.diablu.server.model.data.DiABluDevice;
import citar.diablu.server.model.data.DiABluKey;
import citar.diablu.server.model.data.DiABluMsg;

import static citar.diablu.server.model.settings.DiABluServerCONSTANTS.DEVICE_STATUS_SIMULATED;
import static citar.diablu.server.model.settings.DiABluServerCONSTANTS.LOG_MAIN_NAME;

/*
 * Interfaces
 */

// controller
import citar.diablu.server.controller.in.devices.simulator.DiABluSimulatorControllerListener;

// model
import citar.diablu.server.controller.out.simulator.DiABluSimulatorModelListener;


/**
 *
 * @author  nrodrigues
 */
public class DiABluSimulatorView extends javax.swing.JFrame implements DiABluSimulatorModelListener {
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_jb;
    private javax.swing.JPanel dclientPanel;
    private javax.swing.JPanel devicePanel;
    private javax.swing.JButton edit_jb;
    private javax.swing.JLabel fName_jl;
    private javax.swing.JTextField fName_jtf;
    private javax.swing.JComboBox gameAction_jcb;
    private javax.swing.JLabel gameAction_jl;
    private javax.swing.JComboBox key_jcb;
    private javax.swing.JLabel key_jl;
    private javax.swing.JLabel keyboard_jl;
    private javax.swing.JComboBox majorDeviceClass_jcb;
    private javax.swing.JLabel majorDeviceClass_jl;
    private javax.swing.JLabel message_jl;
    private javax.swing.JTextField message_jtf;
    private javax.swing.JComboBox minorDeviceClass_jcb;
    private javax.swing.JLabel minorDeviceClass_jl;
    private javax.swing.JButton remove_jb;
    private javax.swing.JButton sendKeys_jb;
    private javax.swing.JButton sendMessage_jb;
    private javax.swing.JPanel superPanel;
    private javax.swing.JLabel uuid_jl;
    private javax.swing.JTextField uuid_jtf;
    // End of variables declaration//GEN-END:variables

    private static Logger logger = Logger.getLogger(LOG_MAIN_NAME); 
    
    public DiABluSimulatorControllerListener controller;
    
    /**
     * Creates new formDiABluSimulatorView
     */
    
    
    public DiABluSimulatorView(DiABluSimulatorControllerListener control) {
        
        this.controller = control;
        
        initComponents();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        superPanel = new javax.swing.JPanel();
        devicePanel = new javax.swing.JPanel();
        fName_jl = new javax.swing.JLabel();
        fName_jtf = new javax.swing.JTextField();
        uuid_jl = new javax.swing.JLabel();
        uuid_jtf = new javax.swing.JTextField();
        majorDeviceClass_jl = new javax.swing.JLabel();
        minorDeviceClass_jl = new javax.swing.JLabel();
        minorDeviceClass_jcb = new javax.swing.JComboBox();
        majorDeviceClass_jcb = new javax.swing.JComboBox();
        add_jb = new javax.swing.JButton();
        edit_jb = new javax.swing.JButton();
        remove_jb = new javax.swing.JButton();
        dclientPanel = new javax.swing.JPanel();
        message_jl = new javax.swing.JLabel();
        keyboard_jl = new javax.swing.JLabel();
        key_jl = new javax.swing.JLabel();
        key_jcb = new javax.swing.JComboBox();
        gameAction_jl = new javax.swing.JLabel();
        gameAction_jcb = new javax.swing.JComboBox();
        message_jtf = new javax.swing.JTextField();
        sendKeys_jb = new javax.swing.JButton();
        sendMessage_jb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DiABlu Simulator 2 Beta ");
        superPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        devicePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DiABlu Device", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP));
        fName_jl.setText(" Friendly Name:");

        fName_jtf.setText("JC's PDA2");

        uuid_jl.setText("UUID:");

        uuid_jtf.setText("08002B0ECEF1");

        majorDeviceClass_jl.setText("Major Device Class:");

        minorDeviceClass_jl.setText("Minor Device Class:");

        minorDeviceClass_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Server-class computer", "Desktop Workstation", "Laptop", "Handheld PC/PDA", "Palm sized PC/PDA", "Wearable computer", "Cellular phone", "Cordless phone", "Smart phone", "Wired modem or voice gateway", "Common ISDN access", "Uncategorized" }));

        majorDeviceClass_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Computer", "Phone", "LAN /Network Access point", "Audio/Video", "Peripheral", "Imaging", "Other" }));
        majorDeviceClass_jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                majorDeviceClass_jcbActionPerformed(evt);
            }
        });

        add_jb.setText("Add");
        add_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_jbActionPerformed(evt);
            }
        });

        edit_jb.setText("Edit");
        edit_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_jbActionPerformed(evt);
            }
        });

        remove_jb.setText("Remove");
        remove_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_jbActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout devicePanelLayout = new org.jdesktop.layout.GroupLayout(devicePanel);
        devicePanel.setLayout(devicePanelLayout);
        devicePanelLayout.setHorizontalGroup(
            devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(devicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(minorDeviceClass_jl)
                    .add(majorDeviceClass_jl)
                    .add(fName_jl)
                    .add(uuid_jl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(majorDeviceClass_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 222, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(fName_jtf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .add(minorDeviceClass_jcb, 0, 222, Short.MAX_VALUE)
                    .add(uuid_jtf, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, devicePanelLayout.createSequentialGroup()
                        .add(add_jb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(edit_jb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(remove_jb)))
                .addContainerGap())
        );
        devicePanelLayout.setVerticalGroup(
            devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(devicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(majorDeviceClass_jl)
                    .add(majorDeviceClass_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(minorDeviceClass_jl)
                    .add(minorDeviceClass_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fName_jl)
                    .add(fName_jtf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(uuid_jl)
                    .add(uuid_jtf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devicePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(remove_jb)
                    .add(edit_jb)
                    .add(add_jb))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dclientPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DiABlu Client", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.BELOW_TOP));
        message_jl.setText("[Message]");

        keyboard_jl.setText("[Keyboard]");

        key_jl.setText(" Key:");

        key_jcb.setEditable(true);
        key_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KEY_STAR", "KEY_POUND", "KEY_NUM0", "KEY_NUM1", "KEY_NUM2", "KEY_NUM3", "KEY_NUM4", "KEY_NUM5", "KEY_NUM6", "KEY_NUM7", "KEY_NUM8", "KEY_NUM9", "[none]" }));
        key_jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                key_jcbActionPerformed(evt);
            }
        });

        gameAction_jl.setText("Game Action:");

        gameAction_jcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "[none]", "UP", "DOWN", "LEFT", "RIGHT", "FIRE", "GAME_A", "GAME_B", "GAME_C", "GAME_D" }));
        gameAction_jcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gameAction_jcbActionPerformed(evt);
            }
        });

        message_jtf.setText("Type here your text message...");

        sendKeys_jb.setText("Send Keys");
        sendKeys_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendKeys_jbActionPerformed(evt);
            }
        });

        sendMessage_jb.setText("Send Message");
        sendMessage_jb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessage_jbActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout dclientPanelLayout = new org.jdesktop.layout.GroupLayout(dclientPanel);
        dclientPanel.setLayout(dclientPanelLayout);
        dclientPanelLayout.setHorizontalGroup(
            dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dclientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dclientPanelLayout.createSequentialGroup()
                        .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(message_jl)
                            .add(keyboard_jl))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(message_jtf)
                            .add(dclientPanelLayout.createSequentialGroup()
                                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(dclientPanelLayout.createSequentialGroup()
                                        .add(39, 39, 39)
                                        .add(key_jl))
                                    .add(gameAction_jl))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(key_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(gameAction_jcb, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, dclientPanelLayout.createSequentialGroup()
                        .add(sendMessage_jb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sendKeys_jb)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dclientPanelLayout.setVerticalGroup(
            dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dclientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(message_jtf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(message_jl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gameAction_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(gameAction_jl)
                    .add(keyboard_jl))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(key_jl)
                    .add(key_jcb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 31, Short.MAX_VALUE)
                .add(dclientPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(sendKeys_jb)
                    .add(sendMessage_jb))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout superPanelLayout = new org.jdesktop.layout.GroupLayout(superPanel);
        superPanel.setLayout(superPanelLayout);
        superPanelLayout.setHorizontalGroup(
            superPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(superPanelLayout.createSequentialGroup()
                .add(devicePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dclientPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        superPanelLayout.setVerticalGroup(
            superPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(devicePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
            .add(dclientPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(superPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(superPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void remove_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_jbActionPerformed

        controller.removeSimDiABluDevice(getDiABluDevice());
        
    }//GEN-LAST:event_remove_jbActionPerformed

    private void edit_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_jbActionPerformed

        controller.editSimDiABluDevice(getDiABluDevice());
        
    }//GEN-LAST:event_edit_jbActionPerformed

    private void add_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_jbActionPerformed

        controller.newSimDiABluDevice(getDiABluDevice());
        
    }//GEN-LAST:event_add_jbActionPerformed
    // View Methods
    
    /*
     * This method returns the DiABluID corresponding to the selected device
     *
     */
    private DiABluID getDiABluID(){
        
        // get friendly name
        String fName = fName_jtf.getText();
        
        // get uuid
        String uuid = uuid_jtf.getText();
        
        // construct the DiABlu ID
        DiABluID dId = new DiABluID(uuid,fName);
        
        return dId;
    }
    
    private DiABluDevice getDiABluDevice(){
        
        String mdcS = majorDeviceClass_jcb.getSelectedItem().toString();
        logger.finest("Major device class:"+mdcS);
        
        String minordcS = minorDeviceClass_jcb.getSelectedItem().toString();
        logger.finest("Minor device class:"+minordcS);
        
        DiABluDevice dd = new DiABluDevice();
        dd.setStatus(DEVICE_STATUS_SIMULATED);
        dd.setMajorDeviceClass(getMajorDeviceClass());
        dd.setMinorDeviceClass(getMinorDeviceClass());
        dd.setID(getDiABluID());    
        
        
        return dd;
        
    }
    
    private int getMajorDeviceClass(){
        
        int index = majorDeviceClass_jcb.getSelectedIndex();
           
        return 256+index*256;
        
        
    }
    
    private int getMinorDeviceClass(){
        
        int index = minorDeviceClass_jcb.getSelectedIndex();                
        return 4+index*4;
        
    }
    
    // Controller Methods
    
    private void sendKeys_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendKeys_jbActionPerformed

        logger.finest("Processing keys...");
        // get the keys
        String keyPressed = key_jcb.getSelectedItem().toString();
        String gAction = gameAction_jcb.getSelectedItem().toString();
        
        // get the id
        DiABluID dId = getDiABluID();
        
        // contruct the diablu key
        DiABluKey dK = new DiABluKey(dId,keyPressed,gAction);
        
        // send it
        logger.finest("Sending :"+dK.getID().toString());
        controller.newKey(dK);
        
    }//GEN-LAST:event_sendKeys_jbActionPerformed

    private void sendMessage_jbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessage_jbActionPerformed
                
        // get the text
        String text = message_jtf.getText();
        
        // get the id
        DiABluID dId = getDiABluID();
        
        // construct the msg
        DiABluMsg dM = new DiABluMsg(dId,text);
        
        controller.newMsg(dM);
        
    }//GEN-LAST:event_sendMessage_jbActionPerformed

    private void key_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_key_jcbActionPerformed

        // TODO: method that updates the corresponding game action
        
    }//GEN-LAST:event_key_jcbActionPerformed

    private void gameAction_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gameAction_jcbActionPerformed

        // TODO: method that updates the corresponding key pressed
        
    }//GEN-LAST:event_gameAction_jcbActionPerformed

    private void majorDeviceClass_jcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_majorDeviceClass_jcbActionPerformed

        // TODO: method that updates the minor device class selection options
        
    }//GEN-LAST:event_majorDeviceClass_jcbActionPerformed

    
    // Model Listener Methods
    
    /*
     * This method receives a DiABlu Device and updates the view
     *
     */
    public void setSelectedDevice(DiABluDevice dd){
        
        logger.finest("Setting selected device:"+dd.getID().toString());
        
        //uuid
        String uuid = dd.getID().getUUID();
        uuid_jtf.setText(uuid);
        
        //friendly name
        String fname = dd.getID().getFName();
        fName_jtf.setText(fname);
        
        //minor device class
        //TODO method that receives a minor device class and updates both minor & major
        
        
    }

 
}

